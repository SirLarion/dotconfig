// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "space h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorFocus  && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "space l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorFocus  && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "space k",
    "command": "workbench.action.focusAboveGroup",
    "when": " editorFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "space j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorFocus  && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "space v",
    "command": "workbench.action.splitEditorRight",
    "when": "editorFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.vim_ctrl+h",
    "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
  },
  {
    "key": "ctrl+h",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+l",
    "command": "-extension.vim_navigateCtrlL",
    "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "shift+alt+2",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "cmd+backspace",
    "command": "-workbench.action.terminal.killInstance",
    "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "workbench.action.terminal.kill",
    "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.nextEditor",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+9",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.previousEditor",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+8",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "cmd+k",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "filesExplorerFocus"
  },
  {
    "key": "h",
    "command": "previousCompressedFolder",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "key": "left",
    "command": "-previousCompressedFolder",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "nextCompressedFolder",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "key": "right",
    "command": "-nextCompressedFolder",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "key": "shift+k",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 10
    },
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "shift+j",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 10
    },
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+cmd+t",
    "command": "workbench.action.selectTheme"
  },
  {
    "key": "cmd+k cmd+t",
    "command": "-workbench.action.selectTheme"
  }
]

{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "StoryFile": {
    "scope": "",
    "prefix": "storyfile",
    "body": [
      "import React from 'react';",
      "import { ComponentMeta, Story } from '@storybook/react';",
      "",
      "import { $1, I$1Props } from '.';",
      "",
      "export default {",
      "  title: 'Components/$1',",
      "  component: $1,",
      "} as ComponentMeta<typeof $1>;",
      "",
      "const Template: Story<I$1Props> = args => (",
      "  <$1 {...args}/> )",
      "",
      "export const Default = Template.bind({});",
      "",
      "Default.args = {} as I$1Props;"
    ]
  },
  "ReactHull": {
    "scope": "",
    "prefix": "reactComponent",
    "body": [
      "import React, { FC } from 'react';",
      "import styled from 'styled-components';",
      "",
      "export interface I$1Props {}",
      "",
      "const Styled$1 = styled.div``;",
      "",
      "export const $1: FC<I$1Props> = ({...restProps}) => {",
      "    return (",
      "      <Styled$1 {...restProps}>",
      "        heloo",
      "      </Styled$1>",
      "    );",
      "}"
    ]
  },
  "StyledDiv": {
    "scope": "",
    "prefix": "styledDiv",
    "body": ["styled.div`", "", "`;"]
  },
  "console.log snippet": {
    "scope": "",
    "prefix": "log",
    "body": ["console.log('$1', $1)"]
  }
}
